{% liquid
  assign product = product | default: closest.product
  if product == blank
    assign product = collections.all.products.first
  endif

  # Check if bulk pricing is enabled
  if settings.bulk_pricing_enabled == false
    assign show_bulk_pricing = false
  else
    assign show_bulk_pricing = true
  endif

  # Get bulk pricing tiers from metafields or settings
  assign tier1_qty = product.metafields.custom.bulk_tier1_qty.value | default: settings.bulk_tier1_qty | default: 3
  assign tier1_discount = product.metafields.custom.bulk_tier1_discount.value | default: settings.bulk_tier1_discount | default: 10
  assign tier2_qty = product.metafields.custom.bulk_tier2_qty.value | default: settings.bulk_tier2_qty | default: 5
  assign tier2_discount = product.metafields.custom.bulk_tier2_discount.value | default: settings.bulk_tier2_discount | default: 15
  assign tier3_qty = product.metafields.custom.bulk_tier3_qty.value | default: settings.bulk_tier3_qty | default: 10
  assign tier3_discount = product.metafields.custom.bulk_tier3_discount.value | default: settings.bulk_tier3_discount | default: 20

  # Check if product has any bulk pricing tiers
  assign has_bulk_pricing = false
  if tier1_qty > 1 or tier2_qty > 1 or tier3_qty > 1
    assign has_bulk_pricing = true
  endif
%}

{%- if show_bulk_pricing and has_bulk_pricing -%}
  <div class="bulk-pricing" 
       {% if block %}{{ block.shopify_attributes }}{% endif %}
       style="
         {% if block %}{% render 'spacing-style', settings: block.settings %}{% endif %}
         --bulk-bg-color: {{ settings.bulk_pricing_bg_color | default: '#f8f9fa' }};
         --bulk-border-color: {{ settings.bulk_pricing_border_color | default: '#e9ecef' }};
         --bulk-text-color: {{ settings.bulk_pricing_text_color | default: '#495057' }};
         --bulk-discount-color: {{ settings.bulk_pricing_discount_color | default: '#28a745' }};
         --bulk-header-color: {{ settings.bulk_pricing_header_color | default: '#212529' }};
       ">
    
    <div class="bulk-pricing__content">
      <div class="bulk-pricing__header">
        <h3 class="bulk-pricing__title">
          {% if block.settings.title != blank %}
            {{ block.settings.title }}
          {% else %}
            {{ 'products.bulk_pricing.title' | t: default: 'Bulk Pricing' }}
          {% endif %}
        </h3>
        {% if block.settings.description != blank %}
          <p class="bulk-pricing__description">{{ block.settings.description }}</p>
        {% endif %}
      </div>

      <div class="bulk-pricing__tiers">
        {%- if tier1_qty > 1 -%}
          <div class="bulk-pricing__tier">
            <div class="bulk-pricing__tier-qty">{{ tier1_qty }}+</div>
            <div class="bulk-pricing__tier-info">
              <span class="bulk-pricing__tier-discount">{{ tier1_discount }}% OFF</span>
              <span class="bulk-pricing__tier-text">each item</span>
            </div>
          </div>
        {%- endif -%}

        {%- if tier2_qty > 1 and tier2_qty > tier1_qty -%}
          <div class="bulk-pricing__tier">
            <div class="bulk-pricing__tier-qty">{{ tier2_qty }}+</div>
            <div class="bulk-pricing__tier-info">
              <span class="bulk-pricing__tier-discount">{{ tier2_discount }}% OFF</span>
              <span class="bulk-pricing__tier-text">each item</span>
            </div>
          </div>
        {%- endif -%}

        {%- if tier3_qty > 1 and tier3_qty > tier2_qty -%}
          <div class="bulk-pricing__tier">
            <div class="bulk-pricing__tier-qty">{{ tier3_qty }}+</div>
            <div class="bulk-pricing__tier-info">
              <span class="bulk-pricing__tier-discount">{{ tier3_discount }}% OFF</span>
              <span class="bulk-pricing__tier-text">each item</span>
            </div>
          </div>
        {%- endif -%}
      </div>

      {% if block.settings.show_savings_example %}
        <div class="bulk-pricing__example">
          {% assign example_qty = tier1_qty %}
          {% assign example_discount = tier1_discount %}
          {% assign regular_price = product.price %}
          {% assign discounted_price = regular_price | times: 100 | minus: example_discount | divided_by: 100 %}
          {% assign total_savings = regular_price | minus: discounted_price | times: example_qty %}
          
          <p class="bulk-pricing__example-text">
            <strong>Example:</strong> Buy {{ example_qty }} and save {{ total_savings | money }} 
            ({{ discounted_price | money }} each instead of {{ regular_price | money }})
          </p>
        </div>
      {% endif %}
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const quantityInputs = document.querySelectorAll('input[name="quantity"], .quantity__input input');
      const priceElements = document.querySelectorAll('.price__regular .price-item--regular, .price .price-item--regular');
      
      if (quantityInputs.length === 0 || priceElements.length === 0) return;

      const tiers = [
        { qty: {{ tier1_qty }}, discount: {{ tier1_discount }} },
        { qty: {{ tier2_qty }}, discount: {{ tier2_discount }} },
        { qty: {{ tier3_qty }}, discount: {{ tier3_discount }} }
      ].filter(tier => tier.qty > 1).sort((a, b) => b.qty - a.qty);

      const originalPrice = {{ product.price }};

      function updateBulkPricing(quantity) {
        let discount = 0;
        for (const tier of tiers) {
          if (quantity >= tier.qty) {
            discount = tier.discount;
            break;
          }
        }

        const discountedPrice = Math.round(originalPrice * (100 - discount) / 100);
        const savings = (originalPrice - discountedPrice) * quantity;

        priceElements.forEach(priceEl => {
          if (discount > 0) {
            const formattedPrice = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: '{{ cart.currency.iso_code }}'
            }).format(discountedPrice / 100);
            
            priceEl.style.opacity = '0.7';
            priceEl.style.textDecoration = 'line-through';
            
            let bulkPriceEl = priceEl.parentNode.querySelector('.bulk-price');
            if (!bulkPriceEl) {
              bulkPriceEl = document.createElement('span');
              bulkPriceEl.className = 'bulk-price';
              bulkPriceEl.style.color = 'var(--bulk-discount-color, #28a745)';
              bulkPriceEl.style.fontWeight = '600';
              bulkPriceEl.style.marginLeft = '8px';
              priceEl.parentNode.insertBefore(bulkPriceEl, priceEl.nextSibling);
            }
            bulkPriceEl.textContent = formattedPrice + ` (${discount}% off)`;
          } else {
            priceEl.style.opacity = '1';
            priceEl.style.textDecoration = 'none';
            const bulkPriceEl = priceEl.parentNode.querySelector('.bulk-price');
            if (bulkPriceEl) bulkPriceEl.remove();
          }
        });

        // Highlight applicable tier
        document.querySelectorAll('.bulk-pricing__tier').forEach((tier, index) => {
          const tierQty = tiers[tiers.length - 1 - index]?.qty || 0;
          if (quantity >= tierQty && discount > 0) {
            tier.classList.add('bulk-pricing__tier--active');
          } else {
            tier.classList.remove('bulk-pricing__tier--active');
          }
        });
      }

      quantityInputs.forEach(input => {
        input.addEventListener('input', (e) => {
          const quantity = parseInt(e.target.value) || 1;
          updateBulkPricing(quantity);
        });
        
        // Initial update
        updateBulkPricing(parseInt(input.value) || 1);
      });
    });
  </script>
{%- endif -%}

{{ 'bulk-pricing.css' | asset_url | stylesheet_tag }}

{% schema %}
{
  "name": "Bulk Pricing",
  "tag": null,
  "settings": [
    {
      "type": "paragraph",
      "content": "Display bulk pricing tiers to encourage larger quantity purchases. Pricing tiers can be set globally in theme settings or per-product using metafields."
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Bulk Pricing",
      "info": "Leave blank to use default translation"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "placeholder": "Order more and save! The more you buy, the more you save."
    },
    {
      "type": "checkbox",
      "id": "show_savings_example",
      "label": "Show savings example",
      "default": true,
      "info": "Display a calculation showing potential savings"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "Top spacing",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "Bottom spacing",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 16
    }
  ],
  "presets": [
    {
      "name": "Bulk Pricing",
      "settings": {
        "title": "Bulk Pricing",
        "show_savings_example": true,
        "padding-block-start": 16,
        "padding-block-end": 16
      }
    }
  ]
}
{% endschema %}