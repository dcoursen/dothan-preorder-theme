{% liquid
  assign product = product | default: closest.product
  if product == blank
    assign product = collections.all.products.first
  endif
  
  assign preorder_drop_date = product.metafields.custom.preorder_drop_date.value
  assign preorder_pickup_start = product.metafields.custom.preorder_pickup_start.value
  assign pickup_duration_days = product.metafields.custom.pickup_duration_days.value | default: 14
  
  assign now = 'now' | date: '%s'
  assign show_preorder = false
  assign show_pickup = false
  assign is_coming_soon = false
  assign pickup_message = ''
  assign drop_message = ''
  
  if preorder_drop_date != blank
    assign drop_timestamp = preorder_drop_date | date: '%s'
    if drop_timestamp > now
      assign show_preorder = true
      assign is_coming_soon = true
      
      case settings.preorder_date_format
        when 'month_day'
          assign drop_message = preorder_drop_date | date: '%B %d'
        when 'mm_dd'
          assign drop_message = preorder_drop_date | date: '%m/%d'
        when 'dd_mm'
          assign drop_message = preorder_drop_date | date: '%d/%m'
        when 'relative'
          assign days_until = drop_timestamp | minus: now | divided_by: 86400
          if days_until == 0
            assign drop_message = 'Today'
          elsif days_until == 1
            assign drop_message = 'Tomorrow'
          elsif days_until <= 7
            assign drop_message = preorder_drop_date | date: 'This %A'
          else
            assign drop_message = preorder_drop_date | date: '%B %d'
          endif
        when 'full'
          assign drop_message = preorder_drop_date | date: '%B %d at %l:%M%p %Z'
        else
          assign drop_message = preorder_drop_date | date: '%B %d'
      endcase
    endif
  endif
  
  if preorder_pickup_start != blank and is_coming_soon == false
    assign pickup_start_timestamp = preorder_pickup_start | date: '%s'
    assign pickup_end_timestamp = pickup_start_timestamp | plus: pickup_duration_days | times: 86400
    
    assign show_pickup = true
    
    case settings.preorder_date_format
      when 'month_day'
        assign pickup_message = preorder_pickup_start | date: '%B %d'
        if pickup_duration_days > 1
          assign pickup_end_date = pickup_end_timestamp | date: '%B %d'
          assign pickup_message = pickup_message | append: ' - ' | append: pickup_end_date
        endif
      when 'mm_dd'
        assign pickup_message = preorder_pickup_start | date: '%m/%d'
        if pickup_duration_days > 1
          assign pickup_end_date = pickup_end_timestamp | date: '%m/%d'
          assign pickup_message = pickup_message | append: ' - ' | append: pickup_end_date
        endif
      when 'dd_mm'
        assign pickup_message = preorder_pickup_start | date: '%d/%m'
        if pickup_duration_days > 1
          assign pickup_end_date = pickup_end_timestamp | date: '%d/%m'
          assign pickup_message = pickup_message | append: ' - ' | append: pickup_end_date
        endif
      when 'relative'
        assign days_until = pickup_start_timestamp | minus: now | divided_by: 86400
        if days_until <= 0
          assign pickup_message = 'Now'
        elsif days_until == 1
          assign pickup_message = 'Starting Tomorrow'
        elsif days_until <= 7
          assign pickup_message = preorder_pickup_start | date: 'Starting %A'
        else
          assign pickup_message = preorder_pickup_start | date: 'Starting %B %d'
        endif
      when 'full'
        assign pickup_message = preorder_pickup_start | date: '%B %d at %l:%M%p %Z'
      else
        assign pickup_message = preorder_pickup_start | date: '%B %d'
        if pickup_duration_days > 1
          assign pickup_end_date = pickup_end_timestamp | date: '%B %d'
          assign pickup_message = pickup_message | append: ' - ' | append: pickup_end_date
        endif
    endcase
  endif
  
  assign show_display = false
  if show_preorder or show_pickup
    assign show_display = true
  endif
  
  if settings.enable_preorder_display == false
    assign show_display = false
  endif
  
  if show_when_available == false and is_coming_soon == false and show_pickup == false
    assign show_display = false
  endif
  
  comment
    Determine CSS class and approach based on color mode
  endcomment
  
  if settings.preorder_color_mode == 'scheme'
    assign preorder_css_class = 'color-' | append: settings.preorder_color_scheme
    assign use_scheme_colors = true
  else
    assign preorder_css_class = ''
    assign use_scheme_colors = false
  endif
%}

{%- if show_display -%}
  <!-- Preorder Settings Debug:
    Color Mode: {{ settings.preorder_color_mode | default: 'not set' }}
    BG Type: {{ settings.preorder_bg_type | default: 'not set' }}
    BG Color: {{ settings.preorder_bg_color | default: 'not set' }}
    Border Style: {{ settings.preorder_border_style | default: 'not set' }}
    Icon Type: {{ settings.preorder_icon_type | default: 'not set' }}
  -->
  <div class="preorder-display" 
       {% if block %}{{ block.shopify_attributes }}{% endif %}>
         --preorder-bg-gradient-end: {{ settings.preorder_bg_gradient_end | default: '#e8f4e8' }};
         --preorder-bg-gradient-angle: {{ settings.preorder_bg_gradient_angle | default: 135 }}deg;
         --preorder-bg-opacity: {{ settings.preorder_bg_opacity | default: 100 }}%;
         --preorder-border-width: {{ settings.preorder_border_width | default: 2 }}px;
         --preorder-border-style: {{ settings.preorder_border_style | default: 'solid' }};
         --preorder-border-color: {{ settings.preorder_border_color | default: '#4c7c4c' }};
         --preorder-border-radius: {{ settings.preorder_border_radius | default: 12 }}px;
         --preorder-title-color: {{ settings.preorder_title_color | default: '#2d5a2d' }};
         --preorder-message-color: {{ settings.preorder_message_color | default: '#4c7c4c' }};
         --preorder-note-color: {{ settings.preorder_note_color | default: '#6ba46b' }};
         --preorder-badge-bg: {{ settings.preorder_badge_bg_color | default: '#4c7c4c' }};
         --preorder-badge-text: {{ settings.preorder_badge_text_color | default: '#ffffff' }};
         --preorder-badge-ready-bg: {{ settings.preorder_badge_ready_bg_color | default: '#2d5a2d' }};
         --preorder-icon-bg: {{ settings.preorder_icon_bg_color | default: '#4c7c4c' }};
         --preorder-icon-color: {{ settings.preorder_icon_color | default: '#ffffff' }};
         ">
    
    <div class="preorder-display__container spacing-style {{ preorder_css_class }}" 
         data-color-class="{{ preorder_css_class }}"
         data-preorder="{{ is_coming_soon }}"
         data-pickup="{{ show_pickup }}"
         data-drop-timestamp="{{ preorder_drop_date | date: '%s' | default: '' }}"
         data-color-mode="{{ settings.preorder_color_mode | default: 'custom' }}"
         data-bg-type="{{ settings.preorder_bg_type | default: 'gradient' }}"
         data-bg-color="{{ settings.preorder_bg_color | default: '#f0f7f0' }}"
         style="
           {% if block %}{% render 'spacing-style', settings: block.settings %}{% endif %}
           --preorder-bg-color: {{ settings.preorder_bg_color | default: '#f0f7f0' }};
      <div class="preorder-display__icon">
        {%- case settings.preorder_icon_type -%}
          {%- when 'clock' -%}
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20ZM12.5 7H11V13L16.25 16.15L17 14.92L12.5 12.25V7Z" fill="currentColor"/>
            </svg>
          {%- when 'star' -%}
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2L15.09 8.26L22 9L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9L8.91 8.26L12 2Z" fill="currentColor"/>
            </svg>
          {%- when 'package' -%}
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 8H17.19C16.74 7.22 16.12 6.55 15.37 6.04L12 4L8.63 6.04C7.88 6.55 7.26 7.22 6.81 8H4C2.9 8 2 8.9 2 10V19C2 20.1 2.9 21 4 21H20C21.1 21 22 20.1 22 19V10C22 8.9 21.1 8 20 8ZM12 6L13.5 7H10.5L12 6ZM20 19H4V10H20V19Z" fill="currentColor"/>
            </svg>
          {%- when 'truck' -%}
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 8H17V4H3C1.9 4 1 4.9 1 6V17H3C3 18.66 4.34 20 6 20S9 18.66 9 17H15C15 18.66 16.34 20 18 20S21 18.66 21 17H23V12L20 8ZM6 18C5.45 18 5 17.55 5 17S5.45 16 6 16 7 16.45 7 17 6.55 18 6 18ZM19.5 9.5L21.46 12H17V9.5H19.5ZM18 18C17.45 18 17 17.55 17 17S17.45 16 18 16 19 16.45 19 17 18.55 18 18 18Z" fill="currentColor"/>
            </svg>
          {%- else -%}
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M19 3H18V1H16V3H8V1H6V3H5C3.89 3 3.01 3.9 3.01 5L3 19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V8H19V19ZM7 10H12V15H7V10Z" fill="currentColor"/>
            </svg>
        {%- endcase -%}
      </div>
      
      <div class="preorder-display__content">
        {%- if is_coming_soon -%}
          <div class="preorder-display__badge">{{ settings.preorder_badge_coming_text }}</div>
          <h3 class="preorder-display__title">{{ settings.preorder_title_coming }}</h3>
          <p class="preorder-display__message">
            {%- assign formatted_message = settings.preorder_available_format | replace: '{date}', drop_message -%}
            {{ formatted_message }}
          </p>
          {%- if settings.preorder_show_countdown -%}
            <div class="preorder-display__countdown" data-target="{{ preorder_drop_date | date: '%s' }}"></div>
          {%- endif -%}
        {%- elsif show_pickup -%}
          <div class="preorder-display__badge preorder-display__badge--ready">{{ settings.preorder_badge_ready_text }}</div>
          <h3 class="preorder-display__title">{{ settings.preorder_title_ready }}</h3>
          <p class="preorder-display__message">
            {%- assign formatted_pickup = settings.preorder_pickup_format | replace: '{date}', pickup_message -%}
            {{ formatted_pickup }}
          </p>
          <p class="preorder-display__note">
            {{ settings.preorder_note_text }}
          </p>
        {%- endif -%}
      </div>
    </div>
  </div>

  {%- if is_coming_soon and settings.preorder_show_countdown -%}
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const countdownEl = document.querySelector('.preorder-display__countdown[data-target]');
        if (!countdownEl) return;
        
        const targetTime = parseInt(countdownEl.dataset.target) * 1000;
        
        function updateCountdown() {
          const now = new Date().getTime();
          const distance = targetTime - now;
          
          if (distance < 0) {
            countdownEl.innerHTML = '<span class="preorder-display__countdown-live">Available now!</span>';
            return;
          }
          
          const days = Math.floor(distance / (1000 * 60 * 60 * 24));
          const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          
          let countdownText = '';
          if (days > 0) {
            countdownText = `${days} day${days !== 1 ? 's' : ''}, ${hours} hour${hours !== 1 ? 's' : ''}`;
          } else if (hours > 0) {
            countdownText = `${hours} hour${hours !== 1 ? 's' : ''}, ${minutes} minute${minutes !== 1 ? 's' : ''}`;
          } else {
            countdownText = `${minutes} minute${minutes !== 1 ? 's' : ''}`;
          }
          
          countdownEl.innerHTML = `<span class="preorder-display__countdown-live">Available in ${countdownText}</span>`;
        }
        
        updateCountdown();
        setInterval(updateCountdown, 60000); // Update every minute
      });
    </script>
  {%- endif -%}
{%- endif -%}

{% stylesheet %}
  .preorder-display {
    width: 100%;
    display: block;
    box-sizing: border-box;
  }
  
  .preorder-display__container {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md, 16px);
    padding: var(--spacing-lg, 24px);
    position: relative;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;
    transition: all 0.3s ease;
    
    border-radius: var(--preorder-border-radius);
    
    /* Shadow */
    {% case settings.preorder_shadow_style %}
      {% when 'subtle' %}
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      {% when 'medium' %}
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
      {% when 'strong' %}
        box-shadow: 0 12px 36px rgba(0, 0, 0, 0.2);
      {% when 'custom' %}
        box-shadow: 0 8px 24px {{ settings.preorder_shadow_color | color_modify: 'alpha', 0.2 }};
      {% else %}
        box-shadow: none;
    {% endcase %}
    
    {% unless settings.preorder_shadow_enable %}
      box-shadow: none;
    {% endunless %}
  }
  
  /* Custom color mode styles - only apply when NO color scheme class is present */
  .preorder-display__container:not([class*="color-"]) {
    border: var(--preorder-border-width) var(--preorder-border-style) var(--preorder-border-color);
    
    /* Background based on type */
    {% if settings.preorder_bg_type == 'solid' %}
      background: color-mix(in srgb, var(--preorder-bg-color) var(--preorder-bg-opacity), transparent);
    {% elsif settings.preorder_bg_type == 'transparent' %}
      background: transparent;
    {% else %}
      background: linear-gradient(
        var(--preorder-bg-gradient-angle),
        color-mix(in srgb, var(--preorder-bg-color) var(--preorder-bg-opacity), transparent) 0%,
        color-mix(in srgb, var(--preorder-bg-gradient-end) var(--preorder-bg-opacity), transparent) 100%
      );
    {% endif %}
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__badge {
    background: var(--preorder-badge-bg);
    color: var(--preorder-badge-text);
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__badge--ready {
    background: var(--preorder-badge-ready-bg) !important;
    color: var(--preorder-badge-text) !important;
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__title {
    color: var(--preorder-title-color);
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__message {
    color: var(--preorder-message-color);
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__note {
    color: var(--preorder-note-color);
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__icon {
    color: var(--preorder-icon-color);
    {% if settings.preorder_icon_circle %}
      background: linear-gradient(135deg, var(--preorder-icon-bg) 0%, color-mix(in srgb, var(--preorder-icon-bg) 60%, white) 100%);
      box-shadow: 0 2px 8px color-mix(in srgb, var(--preorder-icon-bg) 30%, transparent);
    {% endif %}
  }
  
  .preorder-display__container:not([class*="color-"]) .preorder-display__countdown-live {
    border-color: var(--preorder-border-color);
    background: color-mix(in srgb, var(--preorder-border-color) 10%, transparent);
    color: var(--preorder-title-color);
  }
  
  /* Color scheme mode styles - apply when ANY color scheme class is present */
  .preorder-display__container[class*="color-"] {
    border: 2px solid var(--color-border);
    {% if settings.preorder_bg_type == 'transparent' %}
      background: transparent;
    {% else %}
      background: var(--color-background);
    {% endif %}
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__badge {
    background: var(--color-primary-button-background);
    color: var(--color-primary-button-text);
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__badge--ready {
    background: var(--color-primary) !important;
    color: var(--color-primary-button-text) !important;
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__title {
    color: var(--color-foreground-heading);
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__message {
    color: var(--color-foreground);
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__note {
    color: rgba(var(--color-foreground-rgb), 0.8);
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__icon {
    color: var(--color-primary-button-text);
    {% if settings.preorder_icon_circle %}
      background: var(--color-primary-button-background);
      box-shadow: 0 2px 8px rgba(var(--color-primary-rgb), 0.3);
    {% endif %}
  }
  
  .preorder-display__container[class*="color-"] .preorder-display__countdown-live {
    border-color: var(--color-border);
    background: rgba(var(--color-background-rgb), 0.1);
    color: var(--color-foreground-heading);
  }
  
  .preorder-display__icon {
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    {% if settings.preorder_icon_circle %}
      border-radius: 50%;
    {% endif %}
  }
  
  .preorder-display__content {
    flex: 1;
    min-width: 0;
  }
  
  .preorder-display__badge {
    display: inline-block;
    padding: 4px 12px;
    font-size: clamp(0.75rem, 2vw, 0.875rem);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-radius: 20px;
    margin-bottom: 8px;
  }
  
  .preorder-display__title {
    margin: 0 0 8px 0;
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    font-weight: 700;
    line-height: 1.2;
  }
  
  .preorder-display__message {
    margin: 0 0 8px 0;
    font-size: clamp(0.875rem, 2.5vw, 1rem);
    line-height: 1.4;
  }
  
  .preorder-display__note {
    margin: 0;
    font-size: clamp(0.75rem, 2vw, 0.875rem);
    font-style: italic;
  }
  
  .preorder-display__countdown {
    margin-top: 12px;
  }
  
  .preorder-display__countdown-live {
    display: inline-block;
    padding: 8px 16px;
    border: 1px solid;
    border-radius: 8px;
    font-weight: 600;
    font-size: clamp(0.875rem, 2.5vw, 1rem);
    {% if settings.preorder_animation_style != 'none' %}
      animation: pulse 2s ease-in-out infinite;
    {% endif %}
  }
  
  /* Animation styles */
  {% if settings.preorder_animation_style != 'none' %}
    .preorder-display__container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background-size: 200% 100%;
      {% if settings.preorder_animation_style == 'prominent' %}
        animation: shimmer 3s ease-in-out infinite;
      {% elsif settings.preorder_animation_style == 'subtle' %}
        animation: shimmer 6s ease-in-out infinite;
      {% endif %}
    }
    
    {% if settings.preorder_color_mode == 'scheme' %}
      .preorder-display__container.color-{{ settings.preorder_color_scheme }}::before {
        background: linear-gradient(90deg, var(--color-border) 0%, rgba(var(--color-border-rgb), 0.5) 50%, var(--color-border) 100%);
      }
    {% else %}
      .preorder-display__container::before {
        background: linear-gradient(90deg, {{ settings.preorder_border_color }} 0%, {{ settings.preorder_border_color | color_modify: 'alpha', 0.5 }} 50%, {{ settings.preorder_border_color }} 100%);
      }
    {% endif %}
    
    @keyframes shimmer {
      0%, 100% { background-position: 200% 0; }
      50% { background-position: -200% 0; }
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.8; }
    }
  {% endif %}
  
  /* Mobile optimizations */
  @media screen and (max-width: 640px) {
    .preorder-display__container {
      padding: var(--spacing-md, 16px);
      gap: var(--spacing-sm, 12px);
    }
    
    .preorder-display__icon {
      width: 40px;
      height: 40px;
    }
    
    .preorder-display__icon svg {
      width: 20px;
      height: 20px;
    }
  }
  
  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    {% if settings.preorder_color_mode != 'scheme' %}
      .preorder-display__container {
        background: {{ container_bg | color_modify: 'lightness', 20 | color_modify: 'alpha', bg_opacity }};
      }
      
      .preorder-display__title {
        color: {{ title_color | color_modify: 'lightness', 80 }};
      }
      
      .preorder-display__message {
        color: {{ message_color | color_modify: 'lightness', 70 }};
      }
      
      .preorder-display__note {
        color: {{ note_color | color_modify: 'lightness', 60 }};
      }
    {% endif %}
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .preorder-display__container::before,
    .preorder-display__countdown-live {
      animation: none;
    }
    
    .preorder-display__container {
      transition: none;
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .preorder-display__container {
      {% if settings.preorder_border_style != 'none' %}
        border-width: {{ settings.preorder_border_width | plus: 1 }}px;
      {% endif %}
      box-shadow: none;
    }
    
    .preorder-display__badge {
      border: 2px solid currentColor;
    }
  }
{% endstylesheet %}