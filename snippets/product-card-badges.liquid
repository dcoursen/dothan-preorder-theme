{%- doc -%}
  Renders product badges for the product card.

  @param {object} product - The product object.
  @param {object} settings - The theme settings object.

  @example
  {% render 'product-card-badges', product: product, settings: settings %}
{%- enddoc -%}

{% liquid
  # ===========================================
  # PREORDER LOGIC FOR BADGES
  # ===========================================
  
  # Get preorder metafields
  assign preorder_drop_date = product.metafields.custom.preorder_drop_date.value
  
  # Initialize preorder variables
  assign preorder_is_preorder = false
  assign preorder_is_coming_soon = false
  
  # Check if this is a preorder product
  if preorder_drop_date != blank
    assign preorder_is_preorder = true
    assign current_date = 'now' | date: '%s'
    assign drop_date_timestamp = preorder_drop_date | date: '%s'
    
    # Check if we're before the drop date (coming soon)
    if current_date < drop_date_timestamp
      assign preorder_is_coming_soon = true
    endif
  endif
  
  # Determine badge logic
  assign show_coming_soon = false
  assign show_sold_out = false
  assign show_sale = false
  
  if preorder_is_preorder and preorder_is_coming_soon
    # Preorder product that's coming soon - show "Coming Soon" even if marked unavailable
    assign show_coming_soon = true
  elsif product.available == false
    # Regular sold out product (not preorder or past drop date)
    assign show_sold_out = true
  elsif product.compare_at_price > product.price and product.available
    # Sale product
    assign show_sale = true
  endif
%}

<div
  class="product-badges product-badges--{{ settings.badge_position }}"
  style="
    --badge-border-radius: {{ settings.badge_corner_radius }}px;
    --badge-font-family: var(--font-{{ settings.badge_font_family }}--family); --badge-font-weight: var(--font-{{ settings.badge_font_family }}--weight); --badge-text-transform: {{ settings.badge_text_transform }};
  "
>
  {%- if show_coming_soon or show_sold_out or show_sale -%}
    <div
      class="
        product-badges__badge product-badges__badge--rectangle
        {% if show_coming_soon %} color-{{ settings.badge_sold_out_color_scheme }}
        {% elsif show_sold_out %} color-{{ settings.badge_sold_out_color_scheme }}
        {% elsif show_sale %} color-{{ settings.badge_sale_color_scheme }}
        {% endif %}
      "
    >
      {%- if show_coming_soon -%}
        {{ 'products.product.coming_soon' | t }}
      {%- elsif show_sold_out -%}
        {{ 'content.product_badge_sold_out' | t }}
      {%- elsif show_sale -%}
        {{ 'content.product_badge_sale' | t }}
      {%- endif -%}
    </div>
  {%- endif -%}
</div>

{% stylesheet %}
  .product-badges {
    --badge-inset: max(var(--padding-xs), calc((var(--border-radius) + var(--padding-xs)) * (1 - cos(45deg))));

    position: absolute;
    z-index: var(--layer-flat);
  }

  .product-badges--bottom-left {
    bottom: calc(var(--badge-inset) + var(--padding-block-start));
    left: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges--top-left {
    top: calc(var(--badge-inset) + var(--padding-block-start));
    left: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges--top-right {
    top: calc(var(--badge-inset) + var(--padding-block-start));
    right: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges__badge {
    --badge-font-size: var(--font-size--xs);

    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--color-foreground);
    background: var(--color-background);
    font-size: var(--badge-font-size);
    font-family: var(--badge-font-family);
    font-weight: var(--badge-font-weight);
    text-transform: var(--badge-text-transform);
    border-radius: var(--badge-border-radius);
  }

  .product-badges__badge--rectangle {
    padding-block: var(--badge-rectangle-padding-block);
    padding-inline: var(--badge-rectangle-padding-inline);
  }
{% endstylesheet %}